ttt = t(apply(madj[,1:2],1,rewgt,regret$coefficients[2:3]))
reweighted1 = t(apply(madj[,1:length(madj)-1],1,rewgt,regret$coefficients))
View(ttt)
reweighted1 = t(apply(madj[,1:length(madj)-1],1,rewgt,regret$coefficients[2:length(regret$coef)]))
View(ttt)
View(reweighted1)
remove(ttt)
View(reweighted1)
class(reweighted1)
reweighted1 = cbind(reweighted1,Final)
View(reweighted1)
reweighted1 = cbind(t(apply(madj[,1:length(madj)-1],1,rewgt,regret$coefficients[2:length(regret$coef)]),Final)
reweighted1 = cbind(t(apply(madj[,1:length(madj)-1],1,rewgt,regret$coefficients[2:length(regret$coef)])),Final)
rwght1 = cbind(t(apply(madj[,1:length(madj)-1],1,rewgt,regret$coefficients[2:length(regret$coef)])),Final)
remove(reweighted1)
weights
rebalance = function(dataset){
regress = regression1(dataset)
rwght = cbind(t(apply(madj[,1:length(madj)-1],1,rewgt,regret$coefficients[2:length(regret$coef)])),Final)
}
mean_adjust = function(dataset){
for (i in 1:length(dataset)){
dataset[,i] = dataset[,i]-mean(dataset[,i])
}
return(dataset)
}
regression1 = function(dataset){
regression = lm(Final ~ .,data=dataset)
return(regression)
}
rewgt = function(data,weight){
return(data*weight)
}
rebalance = function(dataset){
regress = regression1(dataset)
rwght = cbind(t(apply(madj[,1:length(madj)-1],1,rewgt,regret$coefficients[2:length(regret$coef)])),Final)
}
raw_data <- read.csv("~/Documents/Main/Tetlock/FOCUSusefulindicators/R1sq.csv", row.names=1)
detach(madj)
madj = mean_adjust(raw_data)
attach(madj)
rb = rebalance(madj)
rebalance = function(dataset){
regress = regression1(dataset)
rwght = cbind(t(apply(madj[,1:length(madj)-1],1,rewgt,regret$coefficients[2:length(regress$coef)])),Final)
}
rb = rebalance(madj)
rebalance = function(dataset){
regress = regression1(dataset)
rwght = cbind(t(apply(madj[,1:length(madj)-1],1,rewgt,regress$coefficients[2:length(regress$coef)])),Final)
}
rb = rebalance(madj)
rb = rebalance(madj)
rb = rebalance(rb)
View(rb)
class(rb)
rebalance = function(dataset){
regress = regression1(dataset)
rwght = as.data.frame(cbind(t(apply(madj[,1:length(madj)-1],1,rewgt,regress$coefficients[2:length(regress$coef)])),Final))
return(rwght)
}
rb = rebalance(madj)
View(rb)
View(raw_data)
View(rb)
View(raw_data)
View(madj)
View(rb)
View(madj)
View(rb)
rb = rebalance(madj)
rb = rebalance(rb)
View(rb)
rb = rebalance(rb)
View(rb)
rb = rebalance(rb)
rb = rebalance(rb)
rb = rebalance(rb)
rb = rebalance(rb)
rb = rebalance(rb)
rb = rebalance(rb)
rb = rebalance(rb)
rb = rebalance(rb)
rb = rebalance(rb)
rb = rebalance(rb)
rb = rebalance(rb)
rb = rebalance(rb)
rb = rebalance(rb)
rb = rebalance(rb)
rb = rebalance(rb)
View(rb)
summary(regret)
summary(regress)
regression1(rb)
summary(regression1(rb))
rb = rebalance(rb)
View(rb)
rb = rebalance(rb)
View(rb)
rb = rebalance(rb)
View(rb)
rb = rebalance(rb)
View(rb)
rb = rebalance(rb)
View(rb)
rb = rebalance(rb)
View(rb)
View(madj)
View(rb)
View(madj)
View(rb)
rebalance = function(dataset){
regress = regression1(dataset)
rewgts = apply(dataset[,1:length(dataset)-1],1,rewgt,regress$coefficients[2:length(regress$coef)])
rwgt = cbind(t(rewgts),Final)
rwgt = as.data.frame(rwgt)
return(rwgt)
}
rb = rebalance(rb)
View(rb)
rb = rebalance(rb)
View(rb)
rb = rebalance(rb)
View(rb)
rb = rebalance(rb)
View(rb)
rb = rebalance(madj)
View(rb)
rb = rebalance(rb)
View(rb)
LungCapData <- read.delim("~/Documents/Main/Tetlock/Rcoding/Project2/LungCapData.csv")
View(LungCapData)
attach(LungCapData)
cor(LungCap,Age)
lm(LungCap,Age)
lm(LungCap ~ Age)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVsDifficulty.R', echo=TRUE)
setwd("~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple")
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVsDifficulty.R', echo=TRUE)
View(controldataR1)
View(gjudgedataR1)
View(controldataR2)
View(gjudgedataR2)
View(create_graphs)
round_no = "R1"
gjudgedataR1 <- read.csv("InformativenessVsDifficultyR1 - GJudge.csv", row.names=1)
controldataR1 <- read.csv("InformativenessVsDifficultyR1 - Control.csv", row.names=1)
p_startsR1 = c(1,5,9,13)
round_no = "R2"
gjudgedataR2 <- read.csv("InformativenessVsDifficultyR2 - GJudge.csv", row.names=1)
controldataR2 <- read.csv("InformativenessVsDifficultyR2 - Control.csv", row.names=1)
p_startsR2 = c(1,5,9,15)
round_no = "R1"
gjudgedataR1 <- read.csv("InformativenessVsDifficultyR1 - GJudge.csv", row.names=1)
controldataR1 <- read.csv("InformativenessVsDifficultyR1 - Control.csv", row.names=1)
p_startsR1 = c(1,5,9,13)
round_no = "R2"
gjudgedataR2 <- read.csv("InformativenessVsDifficultyR2 - GJudge.csv", row.names=1)
controldataR2 <- read.csv("InformativenessVsDifficultyR2 - Control.csv", row.names=1)
p_startsR2 = c(1,5,9,15)
gjudge=c(gjudgedataR1,gjudgedataR2)
gjudge[1]
gjudge(1)
gjudge[1]
gjudge[1][1]
gjudge[2]
gjudge[4]
gjudge[16]
gjudge[17]
View(gjudge)
gjudge=(gjudgedataR1,gjudgedataR2)
gjudge=gjudgedataR1,gjudgedataR2
a,b = 2,3
(a,b) = (2,3)
df = data.fram()
df = data.frame()
df$gjudge = gjudgedataR1
df$gjudge = gjudge
?data.frame
blah[] =[]
blah = []
blah = ()
blah = {}
blah[1] = 'ass'
blah[2] = 'ass'
blah[3] = gjudgedataR1
View(blah)
for (i in blah){}
#p_starts are the columns where each successive problem starts in data
round_no = "R1"
gjudgedataR1 <- read.csv("InformativenessVsDifficultyR1 - GJudge.csv", row.names=1)
controldataR1 <- read.csv("InformativenessVsDifficultyR1 - Control.csv", row.names=1)
p_startsR1 = c(1,5,9,13)
round_no = "R2"
gjudgedataR2 <- read.csv("InformativenessVsDifficultyR2 - GJudge.csv", row.names=1)
controldataR2 <- read.csv("InformativenessVsDifficultyR2 - Control.csv", row.names=1)
p_startsR2 = c(1,5,9,15)
#
round_1 = {gjudgedataR1,controldataR1,p_startsR1,"R1"}
blah = {}
blah[fart] = 'ass'
blah[1] = 'ass'
class(blah)
blah[2]=gjudgedataR1
blah = {}
blah[1]=gjudgedataR1
blah = {}
> blah[1] = 'ass'
> blah[2] = 'ass'
> blah[3] = gjudgedataR1
blah = {}
blah[1] = 'ass'
blah[2] = 'donkey'
blah[3] = gjudgedataR1
View(blah)
blah[3]
blah[3][1]
blah[3][2]
gjudgedataR1 <- read.csv("InformativenessVsDifficultyR1 - GJudge.csv", row.names=1)
controldataR1 <- read.csv("InformativenessVsDifficultyR1 - Control.csv", row.names=1)
p_startsR1 = c(1,5,9,13)
round1 = list(gjudgedataR1,controldataR1,p_startsR1,"R1")
View(round1)
round1[1]
gjudgedataR1 <- read.csv("InformativenessVsDifficultyR1 - GJudge.csv", row.names=1)
controldataR1 <- read.csv("InformativenessVsDifficultyR1 - Control.csv", row.names=1)
p_startsR1 = c(1,5,9,13)
round1 = list("gjudge" = gjudgedataR1,"control" = controldataR1,"p_starts" = p_startsR1,"Round" = "R1")
gjudgedataR2 <- read.csv("InformativenessVsDifficultyR2 - GJudge.csv", row.names=1)
controldataR2 <- read.csv("InformativenessVsDifficultyR2 - Control.csv", row.names=1)
p_startsR2 = c(1,5,9,15)
round2 = list("gjudge" = gjudgedataR2,"control" = controldataR2,"p_starts" = p_startsR2,"Round" = "R2")
#
round1
round1$new = 'new'
round1
gjudgedataR1 <- read.csv("InformativenessVsDifficultyR1 - GJudge.csv", row.names=1)
controldataR1 <- read.csv("InformativenessVsDifficultyR1 - Control.csv", row.names=1)
p_startsR1 = c(1,5,9,13)
round1 = list("gjudge" = gjudgedataR1,"control" = controldataR1,"p_starts" = p_startsR1,"Round" = "R1")
gjudgedataR2 <- read.csv("InformativenessVsDifficultyR2 - GJudge.csv", row.names=1)
controldataR2 <- read.csv("InformativenessVsDifficultyR2 - Control.csv", row.names=1)
p_startsR2 = c(1,5,9,15)
round2 = list("gjudge" = gjudgedataR2,"control" = controldataR2,"p_starts" = p_startsR2,"Round" = "R2")
#
gjudgedataR1 <- read.csv("InformativenessVsDifficultyR1 - GJudge.csv", row.names=1)
controldataR1 <- read.csv("InformativenessVsDifficultyR1 - Control.csv", row.names=1)
p_startsR1 = c(1,5,9,13)
round1 = list("r1" = list("gjudge" = gjudgedataR1,"control" = controldataR1,"p_starts" = p_startsR1,"Round" = "R1"))
gjudgedataR2 <- read.csv("InformativenessVsDifficultyR2 - GJudge.csv", row.names=1)
controldataR2 <- read.csv("InformativenessVsDifficultyR2 - Control.csv", row.names=1)
p_startsR2 = c(1,5,9,15)
round2 = list("r2" = list("gjudge" = gjudgedataR2,"control" = controldataR2,"p_starts" = p_startsR2,"Round" = "R2"))
#
View(round1)
gjudgedataR1 <- read.csv("InformativenessVsDifficultyR1 - GJudge.csv", row.names=1)
controldataR1 <- read.csv("InformativenessVsDifficultyR1 - Control.csv", row.names=1)
p_startsR1 = c(1,5,9,13)
round1 = list("r1" = list("gjudge" = gjudgedataR1,"control" = controldataR1,"p_starts" = p_startsR1,"Round" = "R1"))
gjudgedataR2 <- read.csv("InformativenessVsDifficultyR2 - GJudge.csv", row.names=1)
controldataR2 <- read.csv("InformativenessVsDifficultyR2 - Control.csv", row.names=1)
p_startsR2 = c(1,5,9,15)
round2 = list("r2" = list("gjudge" = gjudgedataR2,"control" = controldataR2,"p_starts" = p_startsR2,"Round" = "R2"))
#
round1[1]
round1[1][1]
round1[1]$Round
round1[1]
round1[1]$p_starts
round1[1]
round1$r1$Round
round1[1]$r1$Round
round1[2]$r1$Round
###############################################
#
#
#get data by rounds
#make sure data is in format:
#col 1: forecaster/team
#col 2-n labels: question numbers as you want them to appear on graph
#data = WRPS scores
#p_starts are the columns where each successive problem starts in data
gjudgedataR1 <- read.csv("InformativenessVsDifficultyR1 - GJudge.csv", row.names=1)
controldataR1 <- read.csv("InformativenessVsDifficultyR1 - Control.csv", row.names=1)
p_startsR1 = c(1,5,9,13)
round1 = list("r1" = list("gjudge" = gjudgedataR1,"control" = controldataR1,"p_starts" = p_startsR1,"Round" = "R1"))
gjudgedataR2 <- read.csv("InformativenessVsDifficultyR2 - GJudge.csv", row.names=1)
controldataR2 <- read.csv("InformativenessVsDifficultyR2 - Control.csv", row.names=1)
p_startsR2 = c(1,5,9,15)
round2 = list("r2" = list("gjudge" = gjudgedataR2,"control" = controldataR2,"p_starts" = p_startsR2,"Round" = "R2"))
#
#
#######################################
###############################################
#
#
#get data by rounds
#make sure data is in format:
#col 1: forecaster/team
#col 2-n labels: question numbers as you want them to appear on graph
#data = WRPS scores
#p_starts are the columns where each successive problem starts in data
gjudgedataR1 <- read.csv("InformativenessVsDifficultyR1 - GJudge.csv", row.names=1)
controldataR1 <- read.csv("InformativenessVsDifficultyR1 - Control.csv", row.names=1)
p_startsR1 = c(1,5,9,13)
round1 = list("r1" = list("gjudge" = gjudgedataR1,"control" = controldataR1,"p_starts" = p_startsR1,"Round" = "R1"))
gjudgedataR2 <- read.csv("InformativenessVsDifficultyR2 - GJudge.csv", row.names=1)
controldataR2 <- read.csv("InformativenessVsDifficultyR2 - Control.csv", row.names=1)
p_startsR2 = c(1,5,9,15)
round2 = list("r2" = list("gjudge" = gjudgedataR2,"control" = controldataR2,"p_starts" = p_startsR2,"Round" = "R2"))
#
#
#######################################
#find means of each question score
get_difficulties = function(round_data){
for (i in 1:2){
round_data[i]$gjudge_difficulty = apply(round_data[i]$gjudge[,],2,mean)
round_data[i]$control_difficulty = apply(round_data[i]$control[,],2,mean)
}
}
prepare_data = function(round_data){
#grab sqrts
round_data$r1_sqrt = round_data$r1
round_data$r1_sqrt$gjudge = sqrt(round_data$r1_sqrt$gjudge)
round_data$r1_sqrt$control = sqrt(round_dat$r1_sqrt$control)
get_difficulties(round_data)
get_means_by_question(round_data)
get_means_by_problem(round_data)
}
create_graphs = function(round_data){
prepare_data(round_data)
generate_graph()
}
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
prepare_data(round1)
prepare_data(round1)
prepare_data = function(round_data){
#grab sqrts
round_data$r1_sqrt = round_data$r1
round_data$r1_sqrt$gjudge = sqrt(round_data$r1_sqrt$gjudge)
round_data$r1_sqrt$control = sqrt(round_data$r1_sqrt$control)
get_difficulties(round_data)
get_means_by_question(round_data)
get_means_by_problem(round_data)
}
generate_graph = function(){
}
create_graphs = function(round_data){
prepare_data(round_data)
generate_graph()
}
prepare_data(round1)
View(round1)
prepare_data(round1)
prepare_data = function(round_data){
#grab sqrts
round_data$r1_sqrt = round_data$r1
round_data$r1_sqrt$gjudge = sqrt(round_data$r1_sqrt$gjudge)
round_data$r1_sqrt$control = sqrt(round_data$r1_sqrt$control)
#  get_difficulties(round_data)
get_means_by_question(round_data)
get_means_by_problem(round_data)
}
prepare_data(round1)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
View(blah)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
View(round1)
round1[1]
round1[2]
round1[2][1]
round1[2]$Round
head(round1[1])
round1[[1]]
round1[[2]]
round1[[2]]$Round
round1[[2]]$gjudge
round1[[1]]$gjudge
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
View(round1)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
View(create_graphs)
View(create_graphs)
create_graphs(round1)
create_graphs
create_graphs(round1)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
View(round1)
round1$r1$gjudge
round1$r1$gjudge_difficulty_Qx
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
round1$r1$gjudge_difficulty_Qx
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
View(round2)
View(round1)
View(round2)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
View(round2)
View(round1)
p_startsR1
1:p_startsR1[3]
p_starts[3]
p_startsR1[3]
p_startsR1[[3]]
p_startsR1[[[[3]]]]
p_startsR1[[[[3]]]
p_startsR1[3]
a = c(1,2)
b = c(3,4)
c(a,b)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
View(round1)
View(round2)
for (i in length(p_startsR1)){
butt = i
}
butt
butt = c(1,2)
for (i in length(p_startsR1)){
butt = c(butt,i)
}
butt = c(1,2)
for (i in 1:length(p_startsR1)){
butt = c(butt,i)
}
butt = c()
for (i in 1:length(p_startsR1)){
butt = c(butt,i)
}
butt = c()
for (i in 1:(length(p_startsR1)-1){
butt = c(butt,p_startsR1[i+1]-p_startsR1[i])
}
butt = c()
for (i in 1:(length(p_startsR1)-1)){
butt = c(butt,p_startsR1[i+1]-p_startsR1[i])
}
p_startsR1[-1]
round_data[[i]]$p_lengths = round_data[[i]]$p_starts[-1]-round_data[[i]]$p_starts[-length(round_data[[i]]$p_starts)]
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
View(round1)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
c(2:3)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
View(round1)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
View(round1)
round1$data$gjudge_difficulty_Px
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
View(round1)
round1$data$gjudge_difficulty_Px
View(round2)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
View(round1)
View(round1)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
View(round1)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
View(round1)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
View(round1)
round1[["data"]][["gjudge_informativeness_Qx"]]
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
round1[["data"]][["gjudge_informativeness_Qx"]]
round1[["data"]][["gjudge_informativeness_Px"]]
a = 'ahh'
b = 'bwaaa'
ab
a+b
c(a,b)
round1$gjudge_difficulty]
round1$data$gjudge_difficulty
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
View(round1)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
View(round1)
a = 'ahhh'
b = bwah
b = 'bwah'
paste(a,b)
paste(a,b,a)
View(round1)
round[[1]][[1]]
round1[[1]]
round1[[1]][[1]]
round1[[1]][[3]]
round1[[1]][[2]]
round1[[1]][[4]]
round1[[1]]$Round
round1[[2]]$Round
debugSource('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
View(round1)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
source('~/Documents/GitShare/Tetlockjob/UsefulnessIndicators/InformativenessVDifficultySimple/InformativenessVsDifficultySimplified.R', echo=TRUE)
